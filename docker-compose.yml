version: '3.8'

services:
  web:
    image: charlex123/webappbackend:latest
    build:
      context: .
    command: gunicorn -b 0.0.0.0:5000 app:app
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BOT_TOKEN: ${BOT_TOKEN}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_SECRET_KEY: ${CLOUDINARY_SECRET_KEY}
      CLOUD_NAME: ${CLOUD_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

  bot:
    image: charlex123/webappbackend:latest
    build:
      context: .
    command: python bot.py
    environment:
      DATABASE_URL: ${DATABASE_URL}
      BOT_TOKEN: ${BOT_TOKEN}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/webappbackend.conf:/etc/nginx/conf.d/webappbackend.conf
    depends_on:
      - web
      
volumes:
  pgdata:
